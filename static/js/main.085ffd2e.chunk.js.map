{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","handleEvent","event","type","setState","message","console","log","handleDouble","newStrIndex","state","strIndex","currentChar","textToRead","currentX","currentY","e","this","screenX","screenY","className","onMouseDown","onDoubleClick","onMouseMove","_onMouseMove","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,YC0FAA,E,kDApFb,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAsBRC,YAAc,SAACC,GACM,cAAfA,EAAMC,MAER,EAAKC,SAAS,CAACC,QAAS,eACxBC,QAAQC,IAAI,WAGZ,EAAKH,SAAS,CAACC,QAAS,aACxBC,QAAQC,IAAI,SA/BG,EAmCnBC,aAAe,SAACN,GACd,IAAIO,EAAc,EAAKC,MAAMC,SAAW,EACrB,aAAfT,EAAMC,MACR,EAAKC,SAAL,2BACK,EAAKM,OADV,IAEEC,SAAUF,EACVG,YAAa,EAAKF,MAAMG,WAAWJ,OAtCvC,IACII,EAAa,QAJA,OAMjB,EAAKH,MAAQ,CACXC,SAJa,EAKbE,WAAYA,EACZD,YAAaC,EANA,GAObC,SAAU,EACVC,SAAU,GAXK,E,gDAenB,SAAaC,GACXC,KAAKb,SAAL,2BACKa,KAAKP,OADV,IAEEI,SAAUE,EAAEE,QACZH,SAAUC,EAAEG,a,oBAuChB,WACE,OACE,sBAAKC,UAAU,MACbC,YAAaJ,KAAKhB,YAClBqB,cAAeL,KAAKT,aACpBe,YAAaN,KAAKO,aAAaC,KAAKR,MAHtC,UAIE,gCACE,4CACA,+CAEF,gCACE,4CACA,+CAEF,gCACE,4CACA,+CAEF,8BAAMA,KAAKP,MAAMC,WACjB,8BAAMM,KAAKP,MAAME,cACjB,sCAASK,KAAKP,MAAMI,SAApB,OAAkCG,KAAKP,MAAMK,mB,GAhFnCW,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.085ffd2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let strIndex = 0;\n    let textToRead = \"Hello\";\n\n    this.state = {\n      strIndex: strIndex,\n      textToRead: textToRead,\n      currentChar: textToRead[strIndex],\n      currentX: 0,\n      currentY: 0,\n    }\n  }\n\n  _onMouseMove(e) {\n    this.setState({ \n      ...this.state,\n      currentX: e.screenX, \n      currentY: e.screenY \n    });\n  }\n\n  handleEvent = (event) => {\n    if (event.type === \"mousedown\") {\n      // this.setState({ message: \"Mouse Down\"});\n      this.setState({message: \"Mouse Down\"});\n      console.log(\"DOWN!\")\n    } else {\n        // this.setState({ message: \"Mouse Up\"});\n      this.setState({message: \"Mouse Up\"})\n      console.log(\"UP!\")\n    }\n  }\n\n  handleDouble = (event) => {\n    let newStrIndex = this.state.strIndex + 1;\n    if (event.type === \"dblclick\") {\n      this.setState({\n        ...this.state,\n        strIndex: newStrIndex,\n        currentChar: this.state.textToRead[newStrIndex]\n      })\n\n    }\n  }\n\n  // onClickHandler = event => {\n  //   clearTimeout(timer);\n  //   if (event.detail === 1) {\n  //       timer = setTimeout(this.props.onClick, 200)\n  //       console.log(\"1\")\n  //   } else if (event.detail === 2) {\n  //       this.props.onDoubleClick()\n  //       console.log(\"2\")\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"App\" \n        onMouseDown={this.handleEvent} \n        onDoubleClick={this.handleDouble}\n        onMouseMove={this._onMouseMove.bind(this)}>\n        <div>\n          <button>Hello1</button>\n          <button>Hello4</button>\n        </div>\n        <div>\n          <button>Hello2</button>\n          <button>Hello5</button>\n        </div>\n        <div>\n          <button>Hello3</button>\n          <button>Hello6</button>\n        </div>\n        <div>{this.state.strIndex}</div>\n        <div>{this.state.currentChar}</div>\n        <div>x: {this.state.currentX} y: {this.state.currentY}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}